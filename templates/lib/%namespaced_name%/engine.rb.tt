<% unless options.assets_only? -%>
require "<%= namespaced_name %>/configuration"

<% end -%>
<%= wrap_in_modules <<-rb.strip_heredoc
  class Engine < ::Rails::Engine
  #{mountable? ? '  isolate_namespace ' + camelized_modules : ' '}
  #{api? ? "  config.generators.api_only = true" : ' '}
    \n
    # Initialize engine dependencies on wrapper application
    Gem.loaded_specs["#{ name }"].dependencies.each do |d|
      begin
        require d.name
      rescue LoadError => e
        # Put exceptions here.
      end
    end
    \n
    # Uncomment if migrations need to be shared
    # initializer :append_migrations do |app|
    #   unless app.root.to_s.match root.to_s
    #     config.paths["db/migrate"].expanded.each do |expanded_path|
    #       app.config.paths["db/migrate"] << expanded_path
    #     end
    #   end
    # end
    \n
    config.to_prepare do
      # Dir[Engine.root.join("{app,lib}/**/*_decorator.rb")].each do |c|
      #   require_dependency(c)
      # end
    end
  end
rb
%>
